from weather_api import get_weather
import datetime
from aiogram import types


async def show_current_weather(coords: tuple, api_key: str, message: types.message):
    """–§—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–∞–Ω–∏–º–∏ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏,
    —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î —É —Ç–µ–ª–µ–≥—Ä–∞–º"""

    # –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç, –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    data = await get_weather(coords, "ua", api_key)
    text = ""

    # —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ –ø–æ—Å—Ç—ñ–π–Ω–∞, —Ç–æ–º—É –≤–∏–∫–æ–Ω—É—î–º–æ —Ç–∞–∫–∏–π –ø–µ—Ä–µ–±–æ—Ä —Ç–∞ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    if data:
        for name, val in data["current"].items():
            match name:
                case "dt":
                    text += (f"–¥–∞—Ç–∞ üóì: {datetime.datetime.fromtimestamp(val).date()}"
                             f"- {data['current']['weather'][0]['description']}\n\n")
                case "sunrise":
                    text += f"—Å—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚òÄÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n"
                case "sunset":
                    text += f"–∑–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚õÖÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n\n"
                case "temp":
                    text += f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°: {val} ¬∞–° "
                case "feels_like":
                    text += f" –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {val} ¬∞–°\n"
                case "pressure":
                    text += f"–∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫ üèãÔ∏è‚Äç‚ôÄÔ∏è: {val}\n"
                case "humidity":
                    text += f"–≤–æ–ª–æ–≥—ñ—Å—Ç—å üíß: {val} %\n"
                case "dew_point":
                    text += f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü—ñ—ó üí¶: {val} ¬∞–°\n"
                case "uvi":
                    text += f"—É–ª—å—Ç—Ä–∞—Ñ—ñ–æ–ª–µ—Ç–æ–≤–µ –≤–∏–ø—Ä–æ–º—ñ–Ω—é–≤–∞–Ω–Ω—è: {val} \n"
                case "clouds":
                    text += f"—Ö–º–∞—Ä–Ω—ñ—Å—Ç—å: {val} %\n\n"
                case "wind_speed":
                    text += f"—à–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: {val} –º/—Å\n"
                case "wind_deg":
                    #  –¥–ª—è –±—ñ–ª—å—à –Ω–∞–æ—á–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º–∫—É –≤—ñ—Ç—Ä—É
                    directions = ["–ü—ñ–≤–Ω—ñ—á", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π —Å—Ö—ñ–¥",
                                  "–°—Ö—ñ–¥", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π —Å—Ö—ñ–¥",
                                  "–ü—ñ–≤–¥–µ–Ω—å", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π –∑–∞—Ö—ñ–¥",
                                  "–ó–∞—Ö—ñ–¥", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π –∑–∞—Ö—ñ–¥"]

                    index = round(val / 45) % 8
                    direction = directions[index]
                    text += f"–Ω–∞–ø—Ä—è–º–æ–∫ –≤—ñ—Ç—Ä—É: {direction} \n"

                case "wind_gust":
                    text += f"–ø–æ—Ä–∏–≤–∏ –≤—ñ—Ç—Ä—É –¥–æ: {val} –º/—Å\n"

        await message.answer(text)

    else:
        await message.answer("–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")


async def show_forecast(coords: tuple, api_key: str, message: types.message):
    """–î–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–∞–Ω–∏–º–∏ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏,
    —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î —è–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ç–µ–ª–µ–≥—Ä–∞–º"""

    data = await get_weather(coords, "ua", api_key)

    #  —è–∫—â–æ –¥–∞–Ω—ñ —ñ—Å–Ω—É—é—Ç—å
    if data:
        #  —ñ—Ç–µ—Ä—É—î–º–æ—Å—å –∫—Ä—ñ–∑—å –¥–Ω—ñ
        for day in data["daily"]:
            text = ""

            #  —ñ—Ç–µ—Ä—É—î–º–æ—Å—å –∫—Ä—ñ–∑—å –¥–∞–Ω—ñ –¥–Ω—ñ–≤, —Ç–∞ —Ñ–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            for key, val in day.items():
                match key:
                    case "dt":
                        text += (f"–¥–∞—Ç–∞ üóì: {datetime.datetime.fromtimestamp(val).date()}"
                                 f"- {day['weather'][0]['description']}\n\n")
                    case "sunrise":
                        text += f"—Å—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚òÄÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n"
                    case "sunset":
                        text += f"–∑–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚õÖÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n"
                    case "moonrise":
                        text += f"—Å—Ö—ñ–¥ –º—ñ—Å—è—Ü—è üåï: {datetime.datetime.fromtimestamp(val).time()}\n"
                    case "moonset":
                        text += f"–∑–∞—Ö—ñ–¥ –º—ñ—Å—è—Ü—è üåë: {datetime.datetime.fromtimestamp(val).time()}\n"
                    case "moon_phase":
                        text += f"—Ñ–∞–∑–∞ –º—ñ—Å—è—Ü—è üåë: {val}\n\n"

                    case "temp":
                        text += (f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n\n"
                                 f"–¥–µ–Ω—å:{val['day']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['day']}\n"
                                 f"–Ω—ñ—á:{val['night']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['night']}\n"
                                 f"–≤–µ—á—ñ—Ä:{val['eve']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['eve']}\n"
                                 f"—Ä–∞–Ω–æ–∫:{val['morn']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['morn']}\n\n")

                    case "pressure":
                        text += f"–∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫ üèãÔ∏è‚Äç‚ôÄÔ∏è: {val}\n"
                    case "humidity":
                        text += f"–≤–æ–ª–æ–≥—ñ—Å—Ç—å üíß: {val} %\n"
                    case "dew_point":
                        text += f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü—ñ—ó üí¶: {val} ¬∞–°\n"
                    case "wind_deg":
                        #  –¥–ª—è –±—ñ–ª—å—à –Ω–∞–æ—á–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º–∫—É –≤—ñ—Ç—Ä—É
                        directions = ["–ü—ñ–≤–Ω—ñ—á", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π —Å—Ö—ñ–¥",
                                      "–°—Ö—ñ–¥", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π —Å—Ö—ñ–¥",
                                      "–ü—ñ–≤–¥–µ–Ω—å", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π –∑–∞—Ö—ñ–¥",
                                      "–ó–∞—Ö—ñ–¥", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π –∑–∞—Ö—ñ–¥"]

                        index = round(val / 45) % 8
                        direction = directions[index]
                        text += f"–Ω–∞–ø—Ä—è–º–æ–∫ –≤—ñ—Ç—Ä—É: {direction} \n"

                    case "wind_gust":
                        text += f"–ø–æ—Ä–∏–≤–∏ –≤—ñ—Ç—Ä—É –¥–æ: {val} –º/—Å\n"
                    case "clouds":
                        text += f"—Ö–º–∞—Ä–Ω—ñ—Å—Ç—å: {val} %\n"
                    case "uvi":
                        text += f"—É–ª—å—Ç—Ä–∞—Ñ—ñ–æ–ª–µ—Ç–æ–≤–µ –≤–∏–ø—Ä–æ–º—ñ–Ω—é–≤–∞–Ω–Ω—è: {val} \n"

            await message.answer(text)
    else:
        await message.answer("–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")


async def show_forecast_by_date(coords: tuple, api_key: str, message: types.message, date: str):
    """–§—É–Ω–∫—Ü—ñ—è —Ñ–æ—Ä–º—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–∞–Ω–∏–º–∏ –ø–æ—Ç–æ—á–Ω–æ—ó –ø–æ–≥–æ–¥–∏ –∑–∞ –ø–µ–≤–Ω–∏–π –¥–µ–Ω—å,
     –≤–≤–µ–¥–µ–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º, —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î —É —Ç–µ–ª–µ–≥—Ä–∞–º"""

    # —Ä–æ–±–∏–º–æ –∑–∞–ø—Ä–æ—Å –¥–æ –∞–ø—ñ –ø–æ–≥–æ–¥–∏
    data = await get_weather(coords, "ua", api_key)

    if data:

        #  –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∫–æ–∂–µ–Ω –¥–µ–Ω—å —ñ–∑ –¥–∞–Ω–∏—Ö
        for day in data["daily"]:

            #  —è–∫—â–æ –¥–∞—Ç–∞ –¥–Ω—è –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑ –≤–≤–æ–¥–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —Ñ–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
            if str(datetime.datetime.fromtimestamp(day["dt"]).date()) == date:
                text = ""

                # —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ –ø–æ—Å—Ç—ñ–π–Ω–∞, —Ç–æ–º—É –≤–∏–∫–æ–Ω—É—î–º–æ —Ç–∞–∫–∏–π –ø–µ—Ä–µ–±–æ—Ä —Ç–∞ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                for key, val in day.items():
                    match key:
                        case "dt":
                            text += (f"–¥–∞—Ç–∞ üóì: {datetime.datetime.fromtimestamp(val).date()}"
                                     f"- {day['weather'][0]['description']}\n\n")
                        case "sunrise":
                            text += f"—Å—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚òÄÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n"
                        case "sunset":
                            text += f"–∑–∞—Ö—ñ–¥ —Å–æ–Ω—Ü—è ‚õÖÔ∏è: {datetime.datetime.fromtimestamp(val).time()}\n"
                        case "moonrise":
                            text += f"—Å—Ö—ñ–¥ –º—ñ—Å—è—Ü—è üåï: {datetime.datetime.fromtimestamp(val).time()}\n"
                        case "moonset":
                            text += f"–∑–∞—Ö—ñ–¥ –º—ñ—Å—è—Ü—è üåë: {datetime.datetime.fromtimestamp(val).time()}\n"
                        case "moon_phase":
                            text += f"—Ñ–∞–∑–∞ –º—ñ—Å—è—Ü—è üåë: {val}\n\n"

                        case "temp":
                            text += (f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n\n"
                                     f"–¥–µ–Ω—å:{val['day']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['day']}\n"
                                     f"–Ω—ñ—á:{val['night']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['night']}\n"
                                     f"–≤–µ—á—ñ—Ä:{val['eve']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['eve']}\n"
                                     f"—Ä–∞–Ω–æ–∫:{val['morn']}  –≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫  {day['feels_like']['morn']}\n\n")

                        case "pressure":
                            text += f"–∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–∏–π —Ç–∏—Å–∫ üèãÔ∏è‚Äç‚ôÄÔ∏è: {val}\n"
                        case "humidity":
                            text += f"–≤–æ–ª–æ–≥—ñ—Å—Ç—å üíß: {val} %\n"
                        case "dew_point":
                            text += f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü—ñ—ó üí¶: {val} ¬∞–°\n"
                        case "wind_deg":
                            #  –±—ñ–ª—å—à –Ω–∞–æ—á–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º–∫—É –≤—ñ—Ç—Ä—É
                            directions = ["–ü—ñ–≤–Ω—ñ—á", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π —Å—Ö—ñ–¥",
                                          "–°—Ö—ñ–¥", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π —Å—Ö—ñ–¥",
                                          "–ü—ñ–≤–¥–µ–Ω—å", "–ü—ñ–≤–¥–µ–Ω–Ω–∏–π –∑–∞—Ö—ñ–¥",
                                          "–ó–∞—Ö—ñ–¥", "–ü—ñ–≤–Ω—ñ—á–Ω–∏–π –∑–∞—Ö—ñ–¥"]

                            index = round(val / 45) % 8
                            direction = directions[index]
                            text += f"–Ω–∞–ø—Ä—è–º–æ–∫ –≤—ñ—Ç—Ä—É: {direction} \n"

                        case "wind_gust":
                            text += f"–ø–æ—Ä–∏–≤–∏ –≤—ñ—Ç—Ä—É –¥–æ: {val} –º/—Å\n"
                        case "clouds":
                            text += f"—Ö–º–∞—Ä–Ω—ñ—Å—Ç—å: {val} %\n"
                        case "uvi":
                            text += f"—É–ª—å—Ç—Ä–∞—Ñ—ñ–æ–ª–µ—Ç–æ–≤–µ –≤–∏–ø—Ä–æ–º—ñ–Ω—é–≤–∞–Ω–Ω—è: {val} \n"

                await message.answer(text)
    else:
        await message.answer("–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
